/***********************************************************************************************************************
 * PHP文件系统函数：共81个************************************************************************************************
 **********************************************************************************************************************/

chgrp — 改变文件所属的组
chmod — 改变文件模式
chown — 改变文件的所有者

clearstatcache — 清除文件状态缓存

copy — 拷贝文件


disk_free_space — 返回目录中的可用空间
disk_total_space — 返回一个目录的磁盘总大小
diskfreespace — disk_free_space 的别名

fflush — 将缓冲内容输出到文件

filegroup — 取得文件的组
fileinode — 取得文件的 inode

fileowner — 取得文件的所有者
fileperms — 取得文件的权限

fnmatch — 用模式匹配文件名

fscanf — 从文件中格式化输入
fseek — 在文件指针中定位
fstat — 通过已打开的文件指针取得文件信息
ftell — 返回文件指针读/写的位置
ftruncate — 将文件截断到给定的长度

glob — 寻找与模式匹配的文件路径

is_link — 判断给定文件名是否为一个符号连接
is_readable — 判断给定文件名是否可读
is_uploaded_file — 判断文件是否是通过 HTTP POST 上传的
is_writable — 判断给定的文件名是否可写
is_writeable — is_writable 的别名

lchgrp — 修改符号链接的所有组
lchown — 修改符号链接的所有者
link — 建立一个硬连接
linkinfo — 获取一个连接的信息
lstat — 给出一个文件或符号连接的信息

move_uploaded_file — 将上传的文件移动到新位置
parse_ini_file — 解析一个配置文件
parse_ini_string — 解析配置字符串

pclose — 关闭进程文件指针
popen — 打开进程文件指针
readfile — 输出文件
readlink — 返回符号连接指向的目标
realpath_cache_get — 获取真实目录缓存的详情
realpath_cache_size — 获取真实路径缓冲区的大小
realpath — 返回规范化的绝对路径名

set_file_buffer — stream_set_write_buffer 的别名
stat — 给出文件的信息
symlink — 建立符号连接
tempnam — 建立一个具有唯一文件名的文件
tmpfile — 建立一个临时文件
touch — 设定文件的访问和修改时间
umask — 改变当前的 umask


/***********************************************************************************************************************
 * 目录
 */
// 判断
file_exists — 检查文件或目录是否存在
is_dir — 判断给定文件名是否是一个目录

// 信息
pathinfo — 返回文件路径的信息
dirname — 返回路径中的目录部分
basename — 返回路径中的文件名部分
file — 把整个文件读入一个数组中

// 创建
mkdir — 新建目录

// 修改
rename — 重命名一个文件或目录

// 删除
rmdir — 删除目录


/***********************************************************************************************************************
 * 文件
 */
// 判断
is_file — 判断给定文件名是否为一个正常的文件
is_executable — 判断给定文件名是否可执行



// PHP5.0读写方法
file_get_contents — 将整个文件读入一个字符串
file_put_contents — 将一个字符串写入文件

//


// 打开文件
fopen — 打开文件或者 URL

// 文件大小
filesize — 取得文件大小
filetype — 取得文件类型
flock — 轻便的咨询文件锁定

// 读文件
fread — 读取文件（可安全用于二进制文件）
fgetc — 从文件指针中读取字符
fgetcsv — 从文件指针中读入一行并解析 CSV 字段
fgets — 从文件指针中读取一行
fgetss — 从文件指针中读取一行并过滤掉 HTML 标记

// 时间
fileatime — 取得文件的上次访问时间
filectime — 取得文件的 inode 修改时间
filemtime — 取得文件修改时间

// 指针
feof — 测试文件指针是否到了文件结束的位置
rewind — 倒回文件指针的位置
fpassthru — 输出文件指针处的所有剩余数据
fputcsv — 将行格式化为 CSV 并写入文件指针

// 写文件
fwrite — 写入文件（可安全用于二进制文件）
fputs — fwrite 的别名

// 关闭
fclose — 关闭一个已打开的文件指针

// 删除文件
unlink — 删除文件
delete — 参见 unlink 或 unset





