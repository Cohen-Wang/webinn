主讲老师：未知
地址：https://study.163.com/course/courseMain.htm?courseId=1004960043
总课时：25课


+--------------------------------------------------------------------------------------------------------------------------
|第1课：安装版本
+--------------------------------------------------------------------------------------------------------------------------
【版本介绍】
	当前讲的3.0，最新版本4.0
	
【默认安装最新版本】
	npm install webpack -g

【安装指定版本】
	npm install -g webpack@3.10.0
	
【本地安装指定版本】
	npm install webpack@3.10.0 --save-dev


+--------------------------------------------------------------------------------------------------------------------------
|第2课：介绍
+--------------------------------------------------------------------------------------------------------------------------
【介绍】
	现代js的模块打包器

【nodejs安装】
	node -v
	npm -v

【全局安装】
	npm install -g webpack
	webpack --help
	
【本地安装】
	1.cmd
	2.mkdir demo （创建项目目录）
	3.npm init -y （生成package.json）
	4.npm install webpack@3.10.0 --save-dev
	

+--------------------------------------------------------------------------------------------------------------------------
|第3课：打包初体验
+--------------------------------------------------------------------------------------------------------------------------
【创建webpack.config.js】

	const path = require('path');// nodejs自带包
	
	module.export = {
		// 入口文件
		extry: './src/index.js',
		
		// 输出目录（打包的js文件）
		output: {
			path: path.resolve(__dirname, 'dist'),// 目录的绝对路径
			filrname: 'app.js', // 输出的文件
		}
	}
	
最终会生成app.js文件，也就是index.html文件需要【引入】的文件。（这些操作是可以通过webpack的插件完成的，即html-webpack-plugin）


+--------------------------------------------------------------------------------------------------------------------------
|第4课：什么是插件
+--------------------------------------------------------------------------------------------------------------------------
【安装插件】
	npm install html-webpack-plugin --save-dev

【引入插件】
	webpack.config.js
		// 引入插件
		const HtmlWebpackPlugin = require('html-webpack-plugin');
		
		module.export = {
			// 入口文件
			extry: './src/index.js',
			
			// 输出目录（打包的js文件）
			output: {
				path: path.resolve(__dirname, 'dist'),// 目录的绝对路径
				filrname: 'app.js', // 输出的文件
			},
			
			【
			plugins: [
				new HtmlWebpackPlugin({
					filename: 'main.html',// 指定打包出来的html文件的名字，默认：index.html
					template: 'src/index.html',// 指定一个html模板，也就是我们需要的html文件里的内容
				})
			],
			】
		}


+--------------------------------------------------------------------------------------------------------------------------
|第5课：devserver
+--------------------------------------------------------------------------------------------------------------------------
【介绍】
	简单的web服务器，并且能够实时重新加载（live reloading）【当保存的时候，自动的加载】
	
【安装】
	npm install webpack-dev-server --save-dev
	
【补充】
	进入bin目录里面的文件，即是命令
	
【添加命令】
	package.json
		'script': {
			'start': './node_modules/.bin/webpack-dev-server',// 本来应该是这样，但根据nodejs 找文件的方式，可以写成下面样子
			【'start': 'webpack-dev-server'】,
		}
		
【使用】		
	直接 npm start，而不是npm run start
	
【自动打开，不要手动复制localhost:8080】
	webpack.config.js
		// 引入插件
		const HtmlWebpackPlugin = require('html-webpack-plugin');
		
		module.export = {
			// 入口文件
			extry: './src/index.js',
			
			// 输出目录（打包的js文件）
			output: {
				path: path.resolve(__dirname, 'dist'),// 目录的绝对路径
				filrname: 'app.js', // 输出的文件
			},
			plugins: [
				new HtmlWebpackPlugin({
					filename: 'main.html',// 指定打包出来的html文件的名字，默认：index.html
					template: 'src/index.html',// 指定一个html模板，也就是我们需要的html文件里的内容
				})
			],
			
			【
			devServer: {【打包到内存的，而不是真正的文件，假如没有index.html文件，也可以显示。】
				open: true,// 当输入npm start后，直接打开
				port: 1234,// 修改端口
				contentBase: './dist',// 修改服务器访问的根目录，默认：'./'
			}
			】
		}


+--------------------------------------------------------------------------------------------------------------------------
|第 课
+--------------------------------------------------------------------------------------------------------------------------


+--------------------------------------------------------------------------------------------------------------------------
|第 课
+--------------------------------------------------------------------------------------------------------------------------



+--------------------------------------------------------------------------------------------------------------------------
|第 课
+--------------------------------------------------------------------------------------------------------------------------



+--------------------------------------------------------------------------------------------------------------------------
|第 课
+--------------------------------------------------------------------------------------------------------------------------



+--------------------------------------------------------------------------------------------------------------------------
|第 课
+--------------------------------------------------------------------------------------------------------------------------



+--------------------------------------------------------------------------------------------------------------------------
|第 课
+--------------------------------------------------------------------------------------------------------------------------



+--------------------------------------------------------------------------------------------------------------------------
|第 课
+--------------------------------------------------------------------------------------------------------------------------



+--------------------------------------------------------------------------------------------------------------------------
|第 课
+--------------------------------------------------------------------------------------------------------------------------




+--------------------------------------------------------------------------------------------------------------------------
|第 课
+--------------------------------------------------------------------------------------------------------------------------



+--------------------------------------------------------------------------------------------------------------------------
|第 课
+--------------------------------------------------------------------------------------------------------------------------






