/**
 * Memcache类
 * 共19个方法
 */
// Memcache::addServer — 向连接池中添加一个memcache服务器
// Memcache::connect — 打开一个memcached服务端连接
// Memcache::close — 关闭memcache连接(对常连接不起作用)

// Memcache::pconnect — 打开一个到服务器的持久化连接


// Memcache::set — Store data at the server
// Memcache::add — 增加一个条目到缓存服务器
// Memcache::replace — 替换已经存在的元素的值
// Memcache::delete — 从服务端删除一个元素
// Memcache::flush — 清洗（删除）已经存储的所有的元素
// Memcache::get — 从服务端检回一个元素

// Memcache::increment — 增加一个元素的值
// Memcache::decrement — 减小元素的值

// Memcache::getExtendedStats — 缓存服务器池中所有服务器统计信息
// Memcache::getServerStatus — 用于获取一个服务器的在线/离线状态
// Memcache::getStats — 获取服务器统计信息
// Memcache::getVersion — 返回服务器版本信息

// Memcache::setCompressThreshold — 开启大值自动压缩
// Memcache::setServerParams — 运行时修改服务器参数和状态
// memcache_debug — 转换调试输出的开/关


----------------------------------------------------------------------------------------------------------------------
// 初始化
$memcache_obj = new Memcache();
$memcache_obj->addServer('localhost', 11211);
//$memcache_obj->addServer('47.92.197.102', 11211);
var_dump($memcache_obj);


// 状态
echo $memcache_obj->getVersion().'<br>';



//$state = $memcache_obj->getStats();
//echo '<pre>';
//print_r($state);
//echo '</pre>';


//$localServer = $memcache_obj->getServerStatus('localhost', 11211);
//echo $localServer.'<br>';// 返回：1；链接成功
//
//$remoteServer = $memcache_obj->getServerStatus('47.92.197.102', 11211);
//echo $remoteServer.'<br>';// 返回：0；链接失败
//
//$extendedStats = $memcache_obj->getExtendedStats();
//echo '<pre>';
//print_r($extendedStats);
//echo '</pre>';


// 是向服务器添加一个缓存的数据，当该键已存在会返回一个false,否则返回一个true
$memcache_obj->add('age', '23', 0, 20);
$age = $memcache_obj->get('age');
echo $age.'<br>';


// 替换
$memcache_obj->replace('name', 'james');


// 则是add和replace的集合体，如果该键存在就替换，不存在就设置，返回的是true
$memcache_obj->set('name', 'cohen', 0, 20);
$name = $memcache_obj->get('name');
echo $name.'<br>';


// 自增 每次 +3
//$memcache_obj->set('counter', 0);
$current_value = $memcache_obj->increment('counter', 3);
$counter = $memcache_obj->get('counter');
echo $counter;





// 删除
$memcache_obj->delete('age');

//将所有的缓存设置为过期，并没有删除
$memcache_obj->flush();

// 关闭缓存服务器链接
$memcache_obj->close();